//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InterfazUsuario.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        CapaServicios.CompositeType GetDataUsingDataContract(CapaServicios.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<CapaServicios.CompositeType> GetDataUsingDataContractAsync(CapaServicios.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AltaAnimal", ReplyAction="http://tempuri.org/IService1/AltaAnimalResponse")]
        void AltaAnimal(int id, string Nombre, string especie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AltaAnimal", ReplyAction="http://tempuri.org/IService1/AltaAnimalResponse")]
        System.Threading.Tasks.Task AltaAnimalAsync(int id, string Nombre, string especie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ModificarAnimal", ReplyAction="http://tempuri.org/IService1/ModificarAnimalResponse")]
        void ModificarAnimal(int id, string Nombre, string especie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ModificarAnimal", ReplyAction="http://tempuri.org/IService1/ModificarAnimalResponse")]
        System.Threading.Tasks.Task ModificarAnimalAsync(int id, string Nombre, string especie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EliminarAnimal", ReplyAction="http://tempuri.org/IService1/EliminarAnimalResponse")]
        void EliminarAnimal(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EliminarAnimal", ReplyAction="http://tempuri.org/IService1/EliminarAnimalResponse")]
        System.Threading.Tasks.Task EliminarAnimalAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : InterfazUsuario.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<InterfazUsuario.ServiceReference1.IService1>, InterfazUsuario.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public CapaServicios.CompositeType GetDataUsingDataContract(CapaServicios.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<CapaServicios.CompositeType> GetDataUsingDataContractAsync(CapaServicios.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public void AltaAnimal(int id, string Nombre, string especie) {
            base.Channel.AltaAnimal(id, Nombre, especie);
        }
        
        public System.Threading.Tasks.Task AltaAnimalAsync(int id, string Nombre, string especie) {
            return base.Channel.AltaAnimalAsync(id, Nombre, especie);
        }
        
        public void ModificarAnimal(int id, string Nombre, string especie) {
            base.Channel.ModificarAnimal(id, Nombre, especie);
        }
        
        public System.Threading.Tasks.Task ModificarAnimalAsync(int id, string Nombre, string especie) {
            return base.Channel.ModificarAnimalAsync(id, Nombre, especie);
        }
        
        public void EliminarAnimal(int id) {
            base.Channel.EliminarAnimal(id);
        }
        
        public System.Threading.Tasks.Task EliminarAnimalAsync(int id) {
            return base.Channel.EliminarAnimalAsync(id);
        }
    }
}
